name: Build

on:
  workflow_dispatch:

run-name: Build Debian 12 and 13

jobs:
  rootfs:
    continue-on-error: true
    runs-on: ubuntu-latest
    name: Build rootfs 
    strategy:
        matrix:
          project:
            - desktop
            - server
          release:
            - bookworm
            - trixie
          desktop:
          - gnome
          - gnome-flashback
          - kde
          - xfce
          - lxde
          - mate
          - cinnamon
          - lxqt
          - none
    steps:
      - name: early exit (server workflow)
        run: exit 1
        if: matrix.project == 'server' && matrix.desktop != 'none'

      - name: early exit (desktop workflow)
        run: exit 1
        if: matrix.project == 'desktop' && matrix.desktop == 'none'

      - name: prepare filename (desktop)
        run: |
          echo "filename=debian-${{ matrix.suite == 'bookworm' && '12' || matrix.suite == 'trixie' && '13' }}-${{ matrix.desktop }}-${{ matrix.project }}-arm64-rootfs">>$GITHUB_ENV
        if: matrix.project == 'desktop'
        
      - name: prepare filename (server)
        run: |
          echo "filename=debian-${{ matrix.suite == 'bookworm' && '12' || matrix.suite == 'trixie' && '13' }}-${{ matrix.project }}-arm64-rootfs">>$GITHUB_ENV
        if: matrix.project == 'server'

      - name: Get more disk space
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          swap-storage: true

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Checkout LFS
        shell: bash
        run: git lfs fetch && git lfs checkout

      - name: Install dependencies
        shell: bash
        run: |
          sudo apt-get update && sudo apt-get upgrade -y
          sudo apt-get install -y build-essential gcc-aarch64-linux-gnu bison \
          qemu-user-static qemu-system-arm qemu-efi u-boot-tools binfmt-support \
          debootstrap flex libssl-dev bc rsync kmod cpio xz-utils fakeroot parted \
          udev dosfstools uuid-runtime git-lfs device-tree-compiler python2 python3 \
          python-is-python3 fdisk bc debhelper python3-pyelftools python3-setuptools \
          python3-distutils python3-pkg-resources swig libfdt-dev libpython3-dev dctrl-tools

      - name: Build
        shell: bash
        run: sudo ./build.sh --board=orangepi-5 --release=${{ matrix.release }} --project=${{ matrix.project }} --rootfs-only --launchpad

      - name: Upload
        uses: actions/upload-artifact@v4.3.1
        with:
            name: '${{ env.filename }}'
            path: ./${{ env.filename }}.tar.xz
            if-no-files-found: error
            overwrite: true
            compression-level: 9
  
  build:
    runs-on: ubuntu-latest
    needs: [rootfs]
    name: Build image 

    strategy:
      matrix:
        board:
          - orangepi-3b
          - orangepi-5
          - orangepi-5b
          - orangepi-5-plus
          - orangepi-5-pro
          - rock-5b
          - rock-5a
          - rock-5-itx
          - radxa-cm5-io
          - radxa-nx5-io
          - radxa-zero3
          - nanopc-t6
          - nanopi-r6c
          - nanopi-r6s
          - indiedroid-nova
          - mixtile-blade3
          - mixtile-core3588e
          - lubancat-4
          - turing-rk1
          - armsom-sige7
          - armsom-w3
        project:
          - desktop
          - server
        release:
          - bookworm
          - trixie
    steps:
      - name: Get more disk space
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          swap-storage: true

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Checkout LFS
        shell: bash
        run: git lfs fetch && git lfs checkout

      - name: Checkout rootfs
        uses: actions/download-artifact@v4.1.2
        with:
            name: debian-${{ matrix.release == 'bookworm' && '12' || matrix.release == 'trixie' && '13' }}-preinstalled-${{ matrix.project }}-arm64-rootfs
            path: ./build/

      - name: Install dependencies
        shell: bash
        run: |
          sudo apt-get update && sudo apt-get upgrade -y
          sudo apt-get install -y build-essential gcc-aarch64-linux-gnu bison \
          qemu-user-static qemu-system-arm qemu-efi u-boot-tools binfmt-support \
          debootstrap flex libssl-dev bc rsync kmod cpio xz-utils fakeroot parted \
          udev dosfstools uuid-runtime git-lfs device-tree-compiler python2 python3 \
          python-is-python3 fdisk bc debhelper python3-pyelftools python3-setuptools \
          python3-distutils python3-pkg-resources swig libfdt-dev libpython3-dev dctrl-tools

      - name: Build
        shell: bash
        run: sudo ./build.sh --board=${{ matrix.board }} --release=${{ matrix.release }} --project=${{ matrix.project }} --launchpad

      - name: Upload
        uses: actions/upload-artifact@v4.3.1
        with:
          name: debian-${{ matrix.release == 'bookworm' && '12' || matrix.release == 'trixie' && '13' }}-preinstalled-${{ matrix.project }}-arm64-${{ matrix.board }}
          path: ./images/debian-*-preinstalled-${{ matrix.project }}-arm64-${{ matrix.board }}.*
          if-no-files-found: error

      - name: Clean cache
        shell: bash
        run: sync && sudo rm -rf ./images/ ./build/ && sync
