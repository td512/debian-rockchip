name: "Composite Image Creation"
runs:
  using: "composite"
  steps:
    - name: early exit (server workflow)
      run: |
        echo "fail-gracefully=true">>$GITHUB_ENV
      if: matrix.project == 'server' && matrix.desktop != 'none'
  
    - name: early exit (desktop workflow)
      run: |
        echo "fail-gracefully=true">>$GITHUB_ENV
      if: matrix.project == 'desktop' && matrix.desktop == 'none'
  
    - name: prepare filename (desktop)
      run: |
        echo "filename=debian-${{ matrix.release == 'bookworm' && '12' || matrix.release == 'trixie' && '13' }}-${{ matrix.desktop }}-preinstalled-${{ matrix.project }}-arm64.rootfs">>$GITHUB_ENV
      if: matrix.project == 'desktop' && env.fail-gracefully != 'true'
      
    - name: prepare filename (server)
      run: |
        echo "filename=debian-${{ matrix.release == 'bookworm' && '12' || matrix.release == 'trixie' && '13' }}-preinstalled-${{ matrix.project }}-arm64.rootfs">>$GITHUB_ENV
      if: matrix.project == 'server' && env.fail-gracefully != 'true'
  
    - name: Checkout code
      uses: actions/checkout@v4
      if: env.fail-gracefully != 'true'
  
    - name: Checkout LFS
      shell: bash
      run: sudo apt-get update && sudo apt-get install -y git-lfs && git lfs fetch && git lfs checkout
      if: env.fail-gracefully != 'true'
  
    - name: Checkout rootfs
      uses: actions/download-artifact@v4.1.2
      with:
          name: ${{ env.filename }}
          path: ./build/${{ env.filename }}.tar.xz
      if: env.fail-gracefully != 'true'
  
    - name: Install dependencies
      shell: bash
      run: |
        sudo apt-get update && sudo apt-get upgrade -y
        sudo apt-get install -y build-essential gcc-aarch64-linux-gnu bison \
        qemu-user-static qemu-system-arm qemu-efi u-boot-tools binfmt-support \
        debootstrap flex libssl-dev bc rsync kmod cpio xz-utils fakeroot parted \
        udev dosfstools uuid-runtime git-lfs device-tree-compiler python2 python3 \
        python-is-python3 fdisk bc debhelper python3-pyelftools python3-setuptools \
        python3-distutils python3-pkg-resources swig libfdt-dev libpython3-dev dctrl-tools
      if: env.fail-gracefully != 'true'
  
    - name: Build
      shell: bash
      run: sudo ./build.sh --board=${{ matrix.board }} --release=${{ matrix.release }} --project=${{ matrix.project }} --desktop=${{ matrix.desktop }} --launchpad
      if: env.fail-gracefully != 'true'
  
    - name: Upload
      uses: actions/upload-artifact@v4.3.1
      with:
        name: debian-${{ matrix.release == 'bookworm' && '12' || matrix.release == 'trixie' && '13' }}-preinstalled-${{ matrix.project }}-arm64-${{ matrix.board }}
        path: ./images/debian-*-preinstalled-${{ matrix.project }}-arm64-${{ matrix.board }}.*
        if-no-files-found: error
      if: env.fail-gracefully != 'true'
  
    - name: Clean cache
      shell: bash
      run: sync && sudo rm -rf ./images/ ./build/ && sync
      if: env.fail-gracefully != 'true'
